import { ObjectWithOptionalKeys } from '../utils/types';

export type FoodUnit = string | number | null;

export type FoodInfo = {
    name: string;
    weight: string;
    details: FoodDetails;
};

export type FoodDetails = {
    kcal: FoodUnit;
    allFat: FoodUnit;
    fat: FoodUnit;
    nonSaturatedFat: FoodUnit;
    carbohydrates: FoodUnit;
    fiber: FoodUnit;
    sugar: FoodUnit;
    protein: FoodUnit;
    sodium: FoodUnit;
    cholesterol: FoodUnit;
    kalium: FoodUnit;
};

export type PartialFoodDetailsKeys = Partial<keyof FoodDetails>[];

export type UnitInfo = {
    fullName: string;
    shortName: string;
    parseName: string;
    unitName: string;
};

export type UnitMap = ObjectWithOptionalKeys<FoodDetails, UnitInfo>;

const getUnitInfo = (params: string[]): UnitInfo => ({
    fullName: params[0],
    shortName: params[1].length === 0 ? params[0] : params[1],
    parseName: params[2],
    unitName: params[3]
});

export const unitMap: UnitMap = {
    kcal: getUnitInfo(['–ö–∞–ª–æ—Ä–∏–∏', '', '–ö–∞–ª ( –∫–∫–∞–ª)', '–≥']),
    allFat: getUnitInfo(['–í—Å–µ–≥–æ –∂–∏—Ä–æ–≤', '–ñ–∏—Ä—ã', '', '–≥']),
    fat: getUnitInfo(['–ñ–∏—Ä', '', '–ñ–∏—Ä( –≥)', '–≥']),
    nonSaturatedFat: getUnitInfo(['–ù/–∂–∏—Ä', '', '–ù/–∂–∏—Ä( –≥)', '–≥']),
    carbohydrates: getUnitInfo(['–£–≥–ª–µ–≤–æ–¥—ã', '–£–≥–ª–µ–≤', '–£–≥–ª–µ–≤( –≥)', '–≥']),
    fiber: getUnitInfo(['–ö–ª–µ—Ç—á–∞—Ç–∫–∞', '–ö–ª–µ—Ç—á', '–ö–ª–µ—Ç—á( –≥)', '–≥']),
    sugar: getUnitInfo(['–°–∞—Ö–∞—Ä', '', '–°–∞—Ö–∞—Ä( –≥)', '–≥']),
    protein: getUnitInfo(['–ë–µ–ª–æ–∫', '–ë–µ–ª–∫', '–ë–µ–ª–∫( –≥)', '–≥']),
    sodium: getUnitInfo(['–ù–∞—Ç—Ä–∏–π', '–ù–∞—Ç—Ä', '–ù–∞—Ç—Ä–∏( –º–≥)', '–º–≥']),
    cholesterol: getUnitInfo(['–•–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω', '–•–æ–ª–µ—Å', '–•–æ–ª–µ—Å( –º–≥)', '–º–≥']),
    kalium: getUnitInfo(['–ö–∞–ª–∏–π', '', '–ö–∞–ª–∏–π( –º–≥)', '–Ω'])
};

export const mealIconMap: { [key: string]: string } = {
    –ó–∞–≤—Ç—Ä–∞–∫: 'üåÖ',
    –û–±–µ–¥: 'üïë',
    –£–∂–∏–Ω: 'üåá',
    –ü–µ—Ä–µ–∫—É—Å: 'üçè'
};
